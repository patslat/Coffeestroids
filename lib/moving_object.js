// Generated by CoffeeScript 1.6.3
(function() {
  var MovingObject;

  MovingObject = (function() {
    function MovingObject(options) {
      this.pos = options.pos, this.vel = options.vel, this.radius = options.radius, this.color = options.color, this.wraps = options.wraps;
    }

    MovingObject.randomVec = function() {
      return {
        x: (Math.random() * 2) - 1,
        y: (Math.random() * 2) - 1
      };
    };

    MovingObject.prototype.move = function() {
      if (this.wraps) {
        this.pos.x = (Game.DIM_X + this.pos.x + this.vel.x) % Game.DIM_X;
        return this.pos.y = (Game.DIM_Y + this.pos.y + this.vel.y) % Game.DIM_Y;
      } else {
        this.pos.x += this.vel.x;
        return this.pos.y += this.vel.y;
      }
    };

    MovingObject.prototype.draw = function(ctx) {
      ctx.strokeStyle = this.color;
      ctx.lineWidth = 2;
      ctx.beginPath();
      ctx.arc(this.pos.x, this.pos.y, this.pos.radius, 0, 2 * Math.PI, false);
      return ctx.stroke();
    };

    MovingObject.prototype.offScreen = function() {
      return this.pos.x > Game.DIM_X || this.pos.x < 0 || this.pos.y > Game.DIM_Y || this.pos.y < 0;
    };

    MovingObject.prototype.isCollidedWith = function(otherObject) {
      var distance;
      return distance = this._calculateDistance(this, otherObject);
    };

    MovingObject.prototype._calculateDistance = function(otherObject) {
      return Math.sqrt(Math.pow(this.pos.x - otherObject.pos.x, 2) + Math.pow(this.pos.y - otherObject.pos.y, 2));
    };

    return MovingObject;

  })();

}).call(this);
